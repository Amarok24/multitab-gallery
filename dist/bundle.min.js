class CssTools{static elemClassAdd(t,e){t?.classList.add(e)}static elemClassRemove(t,e){t?.classList.remove(e)}static elemClassToggle(t,e){t?.classList.toggle(e)}static injectCss(t){const e=document.createElement("style");e.textContent=t,document.head.append(e)}}class MultiTabGallery{constructor(t,e,s=!0){this.maxHeightIndexes=[],this.cssClassCardWrapper="mt-card-wrapper",this.cssClassCardContent="mt-card-content",this.cssClassNavActive="mt-selected",this.cssClassContentActive="mt-shown",this.cssClassContentHighest="mt-highest",this.cssMaybeStatic="position: static;",this._timeoutIdWindowResize=0,this.recalculateHighestElemIndexes=()=>{0!==this._timeoutIdWindowResize&&clearTimeout(this._timeoutIdWindowResize),this._timeoutIdWindowResize=setTimeout((()=>{for(let t=0;t<this.contentWrappers.length;t++)for(let e=0;e<this.contentWrappers[t].childElementCount;e++)CssTools.elemClassRemove(this.contentWrappers[t].children[e],"mt-highest");this.maxHeightIndexes=this.getHighestElemIndexes(this.contentWrappers),console.log("Indexes of highest content:",this.maxHeightIndexes);for(let t=0;t<this.contentWrappers.length;t++){const e=this.contentWrappers[t].children[this.maxHeightIndexes[t]];CssTools.elemClassAdd(e,"mt-highest")}}),200)},this.navWrappers=document.querySelectorAll(t),this.contentWrappers=document.querySelectorAll(e),this.coupleNavAndCards(this.navWrappers,this.contentWrappers),s&&(this.cssMaybeStatic="",this.recalculateHighestElemIndexes(),window.addEventListener("resize",this.recalculateHighestElemIndexes)),this.init()}init(){CssTools.injectCss(`\n      .mt-card-wrapper {\n        position: relative;\n      }\n\n      .mt-card-content {\n        position: absolute;\n        z-index: 0;\n        left: 0;\n        top: 0;\n        box-sizing: border-box;\n        width: 100%;\n        height: auto;\n        max-width: 100%;\n        opacity: 0;\n        transition: opacity 500ms ease-out;\n      }\n\n      .mt-card-content.mt-shown {\n        z-index: 1;\n        opacity: 1;\n        ${this.cssMaybeStatic}\n      }\n\n      .mt-card-content.mt-highest {\n        position: static;\n      }\n      `);for(let t=0;t<this.contentWrappers.length;t++)CssTools.elemClassAdd(this.contentWrappers[t].children[0],this.cssClassContentActive),CssTools.elemClassAdd(this.contentWrappers[t],this.cssClassCardWrapper);for(let t=0;t<this.contentWrappers.length;t++)for(let e=0;e<this.contentWrappers[t].childElementCount;e++)CssTools.elemClassAdd(this.contentWrappers[t].children[e],this.cssClassCardContent)}coupleNavAndCards(t,e){const s=(t,e,s)=>{s.preventDefault();for(let e=0;e<this.contentWrappers[t].childElementCount;e++)CssTools.elemClassRemove(this.contentWrappers[t].children[e],this.cssClassContentActive),CssTools.elemClassRemove(this.navWrappers[t].children[e],this.cssClassNavActive);CssTools.elemClassAdd(this.contentWrappers[t].children[e],this.cssClassContentActive),CssTools.elemClassAdd(this.navWrappers[t].children[e],this.cssClassNavActive)};for(let t=0;t<this.navWrappers.length;t++)for(let e=0;e<this.navWrappers[t].childElementCount;e++)this.navWrappers[t].children[e].addEventListener("click",s.bind(null,t,e))}getHighestElemIndexes(t){let e=[];if(0===t.length)return e;for(let s=0;s<t.length;s++){let n=0,i=0,l=0;for(let e=0;e<t[s].childElementCount;e++)n=t[s].children[e].getBoundingClientRect().height,n>i&&(l=e,i=n);e.push(l)}return e}}const cssQueryNavWrapper=".myNav",cssQueryContentWrapper=".myTabContent";new MultiTabGallery(".myNav",".myTabContent");